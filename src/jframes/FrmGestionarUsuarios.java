/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package jframes;

import conexion.Conexion;
import controlador.ctrlUsuarios;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;

/**
 *
 * @author enmac
 */
public class FrmGestionarUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmGestionarUsuarios
     */
    int idUsuario = 0;

    public FrmGestionarUsuarios() {
        initComponents();

        setTitle("Administrar Usuarios");
        setSize(new Dimension(1060, 450));
        //Cargar tabla
        this.CargarTablaUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_usuarios = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_actualizar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtid_usuario = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        txt_correo = new javax.swing.JTextField();
        txt_usuario = new javax.swing.JTextField();
        txt_fecha_creacion = new javax.swing.JTextField();
        cbo_tipodeusuario = new javax.swing.JComboBox<>();
        jLabel1_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(95, 47, 35));
        jLabel1.setText("Administrar Usuarios ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, -1));

        jScrollPane1.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N

        jTable_usuarios.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jTable_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_usuarios);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 830, 200));

        jPanel1.setBackground(new java.awt.Color(254, 176, 200));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_actualizar.setBackground(new java.awt.Color(95, 47, 35));
        btn_actualizar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btn_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/actualizar.png"))); // NOI18N
        btn_actualizar.setText("Actualizar");
        btn_actualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 130, 37));

        btn_eliminar.setBackground(new java.awt.Color(95, 47, 35));
        btn_eliminar.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        btn_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/cancelar.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 130, 35));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 70, 170, 200));

        jPanel2.setBackground(new java.awt.Color(254, 176, 200));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(95, 47, 35));
        jLabel2.setText("Nombre:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 78, 59, -1));

        jLabel4.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(95, 47, 35));
        jLabel4.setText("Apellido:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 33, 59, -1));

        jLabel5.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(95, 47, 35));
        jLabel5.setText("Correo:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 78, 47, -1));

        jLabel6.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(95, 47, 35));
        jLabel6.setText("Usuario:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 33, 53, -1));

        jLabel7.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(95, 47, 35));
        jLabel7.setText("Tipo de Usuario:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 108, -1));

        jLabel8.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(95, 47, 35));
        jLabel8.setText("Fecha creaci√≥n:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 100, -1));

        jLabel9.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(95, 47, 35));
        jLabel9.setText("ID usuario:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 33, -1, -1));

        txtid_usuario.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txtid_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 156, -1));

        txt_nombre.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 75, 156, -1));

        txt_apellido.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 30, 178, -1));

        txt_correo.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 75, 178, -1));

        txt_usuario.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 30, 170, -1));

        txt_fecha_creacion.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jPanel2.add(txt_fecha_creacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 166, -1));

        cbo_tipodeusuario.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        cbo_tipodeusuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Usuario:", "empleado", "admin" }));
        jPanel2.add(cbo_tipodeusuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 60, 160, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 1010, 130));

        jLabel1_wallpaper.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Fondo_GestionarUsuarios.jpg"))); // NOI18N
        getContentPane().add(jLabel1_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        Usuario usuario = new Usuario();
ctrlUsuarios controlUsuario = new ctrlUsuarios();

if (idUsuario == 0) {
    JOptionPane.showMessageDialog(null, "¬°Seleccione un Usuario!");
} else {
    if (txt_nombre.getText().isEmpty() || txt_apellido.getText().isEmpty()
            || txt_correo.getText().isEmpty() || txt_usuario.getText().isEmpty()
            || cbo_tipodeusuario.getSelectedItem() == null) {

        JOptionPane.showMessageDialog(null, "¬°Completa todos los campos!");
    } else {
        usuario.setNombre(txt_nombre.getText().trim());
        usuario.setApellido(txt_apellido.getText().trim());
        usuario.setCorreo(txt_correo.getText().trim());
        usuario.setUsuario(txt_usuario.getText().trim());

        // Obtener el tipo de usuario seleccionado del JComboBox
        String tipoUsuario = cbo_tipodeusuario.getSelectedItem().toString();
        usuario.setTipo_usuario(tipoUsuario);

        // No se modifica la contrase√±a por privacidad
        // usuario.setConstrasena("...");  // OMITIDO
        usuario.setFecha_creacion(txt_fecha_creacion.getText().trim());

        if (controlUsuario.actualizar(usuario, idUsuario)) {
            JOptionPane.showMessageDialog(null, "¬°Actualizaci√≥n exitosa!");
            this.Limpiar();
            this.CargarTablaUsuarios();
            idUsuario = 0;
        } else {
            JOptionPane.showMessageDialog(null, "¬°Error al actualizar usuario!");
        }
    }
    }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        ctrlUsuarios controlUsuario = new ctrlUsuarios();

if (idUsuario == 0) {
    JOptionPane.showMessageDialog(null, "¬°Seleccione un usuario!");
} else {
    // Verificamos si tiene ventas
    if (controlUsuario.tieneVentas(idUsuario)) {
        JOptionPane.showMessageDialog(null, "¬°No se puede eliminar! El usuario tiene ventas registradas.");
    } else {
        // Confirmamos la eliminaci√≥n
        int confirm = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de eliminar este usuario?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            if (controlUsuario.eliminar(idUsuario)) {
                JOptionPane.showMessageDialog(null, "¬°Usuario eliminado!");
                this.CargarTablaUsuarios();
                this.Limpiar();
                idUsuario = 0;
            } else {
                JOptionPane.showMessageDialog(null, "¬°Error al eliminar usuario!");
            }
        }
    }
    }

    }//GEN-LAST:event_btn_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JComboBox<String> cbo_tipodeusuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1_wallpaper;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_usuarios;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_fecha_creacion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_usuario;
    private javax.swing.JTextField txtid_usuario;
    // End of variables declaration//GEN-END:variables

    /*
     * *****************************************************
     * metodo para limpiar
     * *****************************************************
     */
    private void Limpiar() {
        txt_nombre.setText("");
        txt_apellido.setText("");
        txt_correo.setText("");
        txt_usuario.setText("");
        cbo_tipodeusuario.setSelectedIndex(0);
        txt_fecha_creacion.setText("");
        txtid_usuario.setText("");  // Este campo probablemente no lo quieres limpiar si es el ID
    }

    /*
     * *****************************************************
     * metodo para mostrar todos los clientes registrados
     * *****************************************************
     */
    private void CargarTablaUsuarios() {
        Connection con = Conexion.getConnection();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select * from usuarios";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jTable_usuarios.setModel(model);
            jScrollPane1.setViewportView(jTable_usuarios);

            model.addColumn("N¬∞");
            model.addColumn("Nombre");
            model.addColumn("Apellido");
            model.addColumn("Usuario");
            model.addColumn("Correo");
            model.addColumn("Tipo Usuario");
            model.addColumn("Fecha Creaci√≥n");

            while (rs.next()) {
                Object fila[] = new Object[7];
                fila[0] = rs.getInt("id_usuario");
                fila[1] = rs.getString("nombre");
                fila[2] = rs.getString("apellido");
                fila[3] = rs.getString("usuario");
                fila[4] = rs.getString("correo");
                fila[5] = rs.getString("tipo_usuario");
                fila[6] = rs.getString("fecha_creacion");
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla de usuarios: " + e);
        }

        jTable_usuarios.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_usuarios.rowAtPoint(e.getPoint());
                int columna_point = 0; // La columna 0 es el ID

                if (fila_point > -1) {
                    idUsuario = (int) model.getValueAt(fila_point, columna_point); // ‚úÖ Sin "int"
                    EnviarDatosUsuarioSeleccionado(idUsuario);
                }
            }
        });

    }


    /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
    private void EnviarDatosUsuarioSeleccionado(int idUsuario) {
        try {
            Connection con = Conexion.getConnection();
            PreparedStatement pst = con.prepareStatement(
                    "SELECT * FROM usuarios WHERE id_usuario = ?");
            pst.setInt(1, idUsuario);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtid_usuario.setText(String.valueOf(rs.getInt("id_usuario")));
                txt_nombre.setText(rs.getString("nombre"));
                txt_apellido.setText(rs.getString("apellido"));
                txt_usuario.setText(rs.getString("usuario"));
                txt_correo.setText(rs.getString("correo"));
                cbo_tipodeusuario.setSelectedItem(rs.getString("tipo_usuario"));
                txt_fecha_creacion.setText(rs.getString("fecha_creacion"));

                // La contrase√±a no se mostrar√° ni se modificar√°, solo dejarla vac√≠a
                // No se agrega el campo txt_password aqu√≠
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar usuario: " + e);
        }
    }

}
